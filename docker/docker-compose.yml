version: '3.8'

services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: chandrahoro-backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ../backend:/app
      - backend-venv:/app/venv
    depends_on:
      - redis
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - chandrahoro-network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: chandrahoro-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NODE_ENV=development
    volumes:
      - ../frontend:/app
      - frontend-node-modules:/app/node_modules
    depends_on:
      - backend
    command: npm run dev
    networks:
      - chandrahoro-network

  redis:
    image: redis:7-alpine
    container_name: chandrahoro-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - chandrahoro-network

volumes:
  backend-venv:
  frontend-node-modules:
  redis-data:

networks:
  chandrahoro-network:
    driver: bridge